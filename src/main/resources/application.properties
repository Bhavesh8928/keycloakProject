spring.application.name=demo

spring.datasource.url=jdbc:mysql://localhost:3306/keycloak_db
spring.datasource.username=root
spring.datasource.password=

# Keycloak Configuration after adding the keycloak dependency
#the keycloak.auth-server-url would be the same as the value of the issuer field
#keycloak.auth-server-url=http://localhost:8081/realms/ekkoai/protocol/openid-connect/auth
#keycloak.auth-server-url=http://localhost:8081/auth  //if you are using the default settings
keycloak.auth-server-url=http://localhost:8081/realms/ekkoai
#if you have set up Keycloak to use a specific realm called "ekkoai", then you would use
keycloak.realm=ekkoai
keycloak.client-id=springboot-be
keycloak.client-secret=ai1qU5Gz8FLh4sJnYDKZjqKUsrTBiiBd
keycloak.admin.username=admin
keycloak.admin.password=admin@123
# A bean with that name has already been defined in class path resource so we need to allow overriding we use it
spring.main.allow-bean-definition-overriding=true

# If we are using JWT token
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8081/realms/ekkoai
#spring.security.oauth2.resourceserver.jwt.issuer-uri=http://127.0.0.1:8081/realms/ekkoai

# If we are using opaque token
#spring.security.oauth2.resourceserver.opaquetoken.client-id = springboot-be
#spring.security.oauth2.resourceserver.opaquetoken.client-secret = ai1qU5Gz8FLh4sJnYDKZjqKUsrTBiiBd
#spring.security.oauth2.resourceserver.opaquetoken.introspection-uri = http://localhost:8081/realms/ekkoai/protocol/openid-connect/token/introspect

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
